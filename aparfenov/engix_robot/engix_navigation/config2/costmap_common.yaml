#===============LOCAL & GLOBAL COST MAP PARAMETERS==============================
# A costmap is a means to figure out the cost to get to a destination (like
# routing algorithms in networking). Global and Local costmaps have some over-
# lapping parameters. This file holds these common parameters. For info on each 
# of these items see section 2.3 on this page:
# https://wiki.ros.org/navigation/Tutorials/RobotSetup
#===============================================================================


#-----------------------Robot footprint or radius-------------------------------
#It's kind of odd that this info is not extracted from the URDF, but hey, I can't
#complain! the "footprint" is a ractangular robot, and "robot_radius" is for a 
# circular robot. The four points of the "footprint" need to keep the center of
# the robot in the middle. I used this as a reference:
# https://github.com/husky/husky/blob/melodic-devel/husky_navigation/config/costmap_common.yaml
footprint: [[-0.9, -0.45], [-0.9, 0.45], [0.9, 0.45], [0.9, -0.45]] #MO tuned
footprint_padding: 0.02


#------thresholds on obstacle information put into the costmap--------------
#beyond this distance (in meters), the obstacle will not be put into the costmap.
obstacle_range: 2.5
#The range at which sensor data is kept at higher resolution.
raytrace_range: 3.0


#------------------inflation Costmap Plugin-------------------------------------
# See: https://wiki.ros.org/costmap_2d/hydro/inflation
#this is the distance from the obstacle that we prefer not to touch. Touching 
#the space that this creates from an obsticle is an additional cost. values set
# using navigation tuning maual.
inflation:
    # The radius in meters to which the map inflates obstacle cost values.
    inflation_radius: 0.28 #MO tuned

    # A scaling factor to apply to cost values during inflation. See webpage or
    # tuning manual for description.
    cost_scaling_factor: 3 #MO tuned
    enabled: true             #default value from parameter server
    #inflate_unknown: false    #default value from parameter server


robot_base_frame: base_link

resolution: 0.02 #MO Tuned


#layer definitions
static:
    map_topic: map
    subscribe_to_updates: true

#this is a list of all the sensors that provide data to the costmaps
obstacles_laser:
    # marking - add obstacle information to cost map
    # clearing - clear obstacle information to cost map
    #sensor_frame - the same name as the lidar urdf plugin for Gazebo (publishes 
    #               virtual lidar scans on the scan topic.
    #data_type - the data type of the scans (rostopic info /jimmy/laser/scan)
    #inf_is_valid - put the max value when the data from lidar is inf.
    observation_sources: laser_scan_sensor
    laser_scan_sensor: {sensor_frame: ce30c_lidar, data_type: LaserScan, topic: scan, marking: true, clearing: true, inf_is_valid: true} #mine


sonar_layer:
    # frame: ["sonar_center", "sonar_left_top", "sonar_left_back", "sonal_left_back_back", "sonar_right_top", "sonar_right_back", "sonar_right_back_back"]
    topics: ["/ultrasound_center", "/ultrasound_left_top", "/ultrasound_left_back", "/ultrasound_left_back_back", "/ultrasound_right_top", "/ultrasound_right_back", "/ultrasound_right_back_back"]
    no_readings_timeout: 2.0
    clear_on_max_reading: true
    clear_threshold: 0.2
    mark_threshold: 0.80